<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OpenCV-Python图像的创建和图像颜色空间转换</title>
    <url>/2021/10/06/OpenCV-Python%E5%9B%BE%E5%83%8F%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E5%9B%BE%E5%83%8F%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="图像颜色空间转换"><a href="#图像颜色空间转换" class="headerlink" title="图像颜色空间转换"></a>图像颜色空间转换</h2><p>在使用OpenCV读去图像文件时，我们得到的图像通道顺序是BGR，每个通道的数值是0~255之间。由于对图像操作的需要，我们会将图像进行颜色空间转换处理，通常是将图像从RGB颜色空间转换到其他颜色空间，比如HSV颜色空间。这个过程需要用到两个opencv库函数。</p>
<ul>
<li><p><strong>图像读取函数<code>cv2.imread()</code></strong><br>这个函数有两个参数，第一个是图像文件名，即输入图像的文件所在路径和名称；第二个参数是<code>flag</code>，指定读取图像文件的类型，常见的三种读取图像类型的标志为:<br>(1) <code>cv2.IMREAD_COLOR</code>: 默认参数，读入彩色图像，忽略alpha通道，数字1；<br>(2) <code>cv2.IMREAD_GRAYSCALE</code>：读入灰度图片，数字0；<br>(3) <code>cv2.IMREAD_UNCHANGED</code>：读入完整图片，包括alpha通道，数字-1。</p>
</li>
<li><p><strong>转换图像颜色空间函数<code>cv2.cvtColor()</code></strong><br>这个函数同样是两个参数，一个是读入的图像image，一个是指定图像要转换的类型，比如灰度类型，HSV颜色空间，BGR转RGB通道等  </p>
</li>
</ul>
 <span id="more"></span>

<p>以下图为例做实验：  </p>
<p><img src="/.io//demo.png" alt="demo"></p>
<p>具体代码如下：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">File Name: color_space_conversion.py</span></span><br><span class="line"><span class="string">Program IDE: PyCharm</span></span><br><span class="line"><span class="string">Create File By Author: Hong</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">color_space_conversion</span>(<span class="params">image_path: <span class="built_in">str</span></span>):</span></span><br><span class="line">    img = cv.imread(image_path)  <span class="comment"># BGR读取图像，0~255，苹果手机上颜色是用sRGB，DCI-P3</span></span><br><span class="line">    gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)  <span class="comment"># 转为灰度图</span></span><br><span class="line">    hsv = cv.cvtColor(img, cv.COLOR_BGR2HSV)  <span class="comment"># 转为HSV颜色空间，H 0~180, S,V 0~255</span></span><br><span class="line">    bgr = cv.cvtColor(img, cv.COLOR_HSV2BGR)</span><br><span class="line"></span><br><span class="line">    cv.imshow(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line">    cv.imshow(<span class="string">&#x27;gray&#x27;</span>, gray)</span><br><span class="line">    cv.imshow(<span class="string">&#x27;hsv&#x27;</span>, hsv)</span><br><span class="line">    cv.imshow(<span class="string">&#x27;bgr&#x27;</span>, bgr)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    path = <span class="string">&#x27;images/2.png&#x27;</span></span><br><span class="line">    color_space_conversion(path) </span><br></pre></td></tr></table></figure>

<p>图像转换效果：  </p>
<p><img src="/.io//color_space_convert.png" alt="color_space_convert">  </p>
<h2 id="图像的创建和复制"><a href="#图像的创建和复制" class="headerlink" title="图像的创建和复制"></a>图像的创建和复制</h2><p>在opencv-python中创建图像和复制图像都是numpy数组的操作，本文介绍两种创建图像和两种复制图像的方法。两种创建图像的方式是：  </p>
<p><strong>1. 使用<code>np.zeros_like()</code>函数</strong><br>该函数是将已读取的图片image作为参数传入函数，就可以创建一个和image形状相同的图像，但是都是0像素值。  </p>
<p><strong>2. 使用<code>np.zeros()</code>函数</strong><br>该函数要<strong>传入需要创建图像的形状，并且需要指定数组的数据类型</strong>，默认值是<code>np.float64</code>  </p>
<p>在复制图像时，本文也给出两种实现方法：  </p>
<p><strong>1. 使用<code>np.copy()</code>函数</strong><br>将需要复制的图像image传入该函数，会返回一个numpy数组也即是图像，改变该返回值图像的内容，原图像不会改变。  </p>
<p><strong>2. 使用直接赋值的方法</strong><br>可以采用直接复制的方法将图像image复制给新的变量实现图像的复制，但是这种复制在<strong>改变新的图像时，原来的图像也会随着改变。</strong>  </p>
<p>具体代码如下：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">File Name: color_space_conversion.py</span></span><br><span class="line"><span class="string">Program IDE: PyCharm</span></span><br><span class="line"><span class="string">Create File By Author: Hong</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numpy_img</span>(<span class="params">image_path: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    在opencv-python中所有的图像都是numpy数组，</span></span><br><span class="line"><span class="string">    可以使用numpy操作图像，如生成图像、修改图像、复制图像</span></span><br><span class="line"><span class="string">    :param image_path: 传入图像文件路径</span></span><br><span class="line"><span class="string">    :return: 没有返回值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># cv2.IMREAD_COLOR: 默认参数，读入彩色图像，忽略alpha通道，数字1；</span></span><br><span class="line">    <span class="comment"># cv2.IMREAD_GRAYSCALE：读入灰度图片，数字0；</span></span><br><span class="line">    <span class="comment"># cv2.IMREAD_UNCHANGED：读入完整图片，包括alpha通道，数字-1</span></span><br><span class="line">    img_color = cv.imread(image_path, cv.IMREAD_COLOR)</span><br><span class="line">    img_gray = cv.imread(image_path, cv.IMREAD_GRAYSCALE)</span><br><span class="line">    img_unchanged = cv.imread(image_path, cv.IMREAD_UNCHANGED)</span><br><span class="line">    <span class="built_in">print</span>(img_color.shape)  <span class="comment"># H, W, C  (888，500，3）</span></span><br><span class="line">    <span class="built_in">print</span>(img_gray.shape)  <span class="comment"># H, W  (888, 500)</span></span><br><span class="line">    <span class="built_in">print</span>(img_unchanged.shape)  <span class="comment"># H, W, C (888, 500, 4)</span></span><br><span class="line"></span><br><span class="line">    h, w, c = img_color.shape</span><br><span class="line">    roi = img_color[<span class="number">190</span>:<span class="number">400</span>, <span class="number">150</span>:<span class="number">380</span>, :]  <span class="comment"># 截取img_color图像的一部分, 第一维度指定高的范围，第二维度指定宽的范围，第三维度是通道</span></span><br><span class="line">    <span class="comment"># 方法1 创建一个和img_color形状相同的空白图片</span></span><br><span class="line">    <span class="comment"># blank = np.zeros_like(img_color)</span></span><br><span class="line">    <span class="comment"># 方法2 使用h w c和数据类型，创建一个空白图像</span></span><br><span class="line">    blank = np.zeros((h, w, c), dtype=np.uint8)</span><br><span class="line">    <span class="comment"># blank[190:400, 150:380, :] = img_color[190:400, 150:380, :]</span></span><br><span class="line">    <span class="comment"># print(blank)</span></span><br><span class="line">    <span class="comment"># 方法1 图像copy, 改变blank，不会改变img_color</span></span><br><span class="line">    <span class="comment"># blank = np.copy(img_color)</span></span><br><span class="line">    <span class="comment"># 方法2 图像赋值, 共用同一个数据，改变blank，就会改变img_color</span></span><br><span class="line">    <span class="comment"># blank = img_color</span></span><br><span class="line">    cv.imshow(<span class="string">&#x27;roi&#x27;</span>, roi)</span><br><span class="line">    cv.imshow(<span class="string">&#x27;blank&#x27;</span>, blank)</span><br><span class="line"></span><br><span class="line">    cv.imshow(<span class="string">&#x27;img_color&#x27;</span>, img_color)</span><br><span class="line">    <span class="comment"># cv.imshow(&#x27;img_gray&#x27;, img_gray)</span></span><br><span class="line">    <span class="comment"># cv.imshow(&#x27;img_unchanged&#x27;, img_unchanged)</span></span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    path = <span class="string">&#x27;images/2.png&#x27;</span></span><br><span class="line">    numpy_img(path)</span><br></pre></td></tr></table></figure>

<p>图像创建和复制结果展示：  </p>
<p><img src="/.io//create_and_copy.png" alt="create_and_copy">  </p>
<p>更多精彩内容请关注微信公众号<strong>《AI与计算机视觉》</strong>。</p>
]]></content>
      <categories>
        <category>opencv</category>
      </categories>
      <tags>
        <tag>opencv-python</tag>
      </tags>
  </entry>
  <entry>
    <title>解决OpenCV读完视频报错的问题</title>
    <url>/2021/10/06/%E8%A7%A3%E5%86%B3OpenCV%E8%AF%BB%E5%AE%8C%E8%A7%86%E9%A2%91%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>最近由于项目的需要，经常需要使用opencv读视频操作，会经常遇到一个问题，就是视频读完之后会出现报错的情况，虽然不影响代码结果，但是对于吹毛求疵的我实在忍受不了。</p>
<p>会报错的程序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">File Name: read_video.py</span></span><br><span class="line"><span class="string">Program IDE: PyCharm</span></span><br><span class="line"><span class="string">Create File By Author: Hong</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_video</span>(<span class="params">video_path: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    OpenCV读视频小工具，解决视频读完报错的问题</span></span><br><span class="line"><span class="string">    :param video_path: 输入需要读取的视频文件路径</span></span><br><span class="line"><span class="string">    :return: 没有返回值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;视频路径：&#x27;</span>, video_path)</span><br><span class="line">    cap = cv2.VideoCapture(video_path)</span><br><span class="line">    <span class="keyword">while</span> cap.isOpened():</span><br><span class="line">        <span class="comment"># get a frame</span></span><br><span class="line">        ret, frame = cap.read()</span><br><span class="line"> </span><br><span class="line">        cv2.imshow(<span class="string">&quot;capture&quot;</span>, frame)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;视频读完！&#x27;</span>)</span><br><span class="line">    cap.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    path = <span class="string">r&#x27;D:\multi_insect_videos\multi_object00.mp4&#x27;</span></span><br><span class="line">    read_video(path)</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>这个程序可以把视频正常读完，但是结束之后会输出错误。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;E:/PyCharmDocument/create_ST_image/multi_insect_processing/crop_video_to_images.py&quot;</span>, line <span class="number">76</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    read_video(path)</span><br><span class="line">  File <span class="string">&quot;E:/PyCharmDocument/create_ST_image/multi_insect_processing/crop_video_to_images.py&quot;</span>, line <span class="number">65</span>, <span class="keyword">in</span> read_video</span><br><span class="line">    cv2.imshow(<span class="string">&quot;capture&quot;</span>, frame)</span><br><span class="line">cv2.error: OpenCV(<span class="number">4.5</span><span class="number">.3</span>) C:\Users\runneradmin\AppData\Local\Temp\pip-req-build-uzca7qz1\opencv\modules\imgproc\src\color.cpp:<span class="number">182</span>: error: (-<span class="number">215</span>:Assertion failed) !_src.empty() <span class="keyword">in</span> function <span class="string">&#x27;cv::cvtColor&#x27;</span></span><br></pre></td></tr></table></figure>

<p>原因是视频结束后，opencv的<code>imshow()</code>函数获取不到帧就出错了。解决方法：在<code>imshow()</code>之前加入判断，只有当有帧时才读，没有帧时直接退出循环。</p>
<p>不会报错的代码:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">File Name: read_video.py</span></span><br><span class="line"><span class="string">Program IDE: PyCharm</span></span><br><span class="line"><span class="string">Create File By Author: Hong</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_video</span>(<span class="params">video_path: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    OpenCV读视频小工具，解决视频读完报错的问题</span></span><br><span class="line"><span class="string">    :param video_path: 输入需要读取的视频文件路径</span></span><br><span class="line"><span class="string">    :return: 没有返回值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;视频路径：&#x27;</span>, video_path)</span><br><span class="line">    cap = cv2.VideoCapture(video_path)</span><br><span class="line">    <span class="keyword">while</span> cap.isOpened():</span><br><span class="line">        <span class="comment"># get a frame</span></span><br><span class="line">        ret, frame = cap.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        cv2.imshow(<span class="string">&quot;capture&quot;</span>, frame)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;视频读完！&#x27;</span>)</span><br><span class="line">    cap.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    path = <span class="string">r&#x27;D:\multi_insect_videos\multi_object00.mp4&#x27;</span></span><br><span class="line">    read_video(path)</span><br></pre></td></tr></table></figure>

<p>程序输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">视频路径： D:\multi_insect_videos\multi_object00.mp4</span><br><span class="line">视频读完！</span><br><span class="line"> </span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>更多Python小工具请参考GitHub仓库: <a href="https://github.com/YouthJourney/python-script-tools">https://github.com/YouthJourney/python-script-tools</a></p>
]]></content>
      <tags>
        <tag>opencv-python</tag>
      </tags>
  </entry>
</search>
